{"version":3,"sources":["components/Signin.js","config.js","components/Signup.js","context/app.context.js","components/MyNav.js","components/Search.js","components/Country.js","components/AddWord.js","components/Profile.js","components/Details.js","App.js","index.js"],"names":["theme","createTheme","SignIn","props","btnSignIn","myError","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","helperText","error","Button","mb","Grid","container","item","to","API_URL","SignUp","navigate","useNavigate","handleSignUp","event","a","preventDefault","newUser","username","target","value","email","password","axios","post","withCredentials","UserContext","createContext","UserProverWrapper","useState","user","setUser","setError","Provider","children","MyNav","onLogout","useContext","Navbar","bg","expand","Toggle","Collapse","Nav","className","style","marginLeft","onClick","Search","btnSearch","src","alt","hiddenLabel","Country","useParams","country","city","lat","lon","countryData","setCountryData","cityData","setCityData","useEffect","getData","get","responseCountry","data","responseWeather","map","elem","Card","CardMedia","height","image","flags","svg","CardContent","gutterBottom","common","color","capital","area","population","continents","CardActions","size","maps","googleMaps","openStreetMaps","main","temp","feels_like","humidity","useStyles","makeStyles","root","spacing","button","AddWord","uuidv4","word","translation","inputField","setInputField","handleChangeInput","newInputFields","i","handleSubmit","response","console","log","handleAddFields","handleRemoveFields","values","splice","findIndex","classes","onChange","IconButton","disabled","length","endIcon","Icon","pinLogo","L","iconUrl","iconSize","Profile","setData","MapContainer","width","zoom","center","scrollWheelZoom","TileLayer","attribution","url","Marker","icon","position","Popup","Details","words","setwords","wordCard","setwordCard","handleClick","backgroundColor","fontSize","fontWeight","textAlign","opacity","App","fetchingUser","setFetchingUser","userReponse","handleSigIn","repsonse","handleLogout","handleSearch","destination","try1","currentTarget","path","element","btnSubmit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25a3020f.chunk.js","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {Link} from 'react-router-dom'\n\nconst theme = createTheme();\n\nfunction SignIn(props) {\n\n    const {btnSignIn, myError} = props\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={btnSignIn} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              helperText={myError ? myError : \"\"}\n              error={myError ? true: false}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link to=\"/signup\" >\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default SignIn","// const API_URL = \"http://localhost:5005/api\"\n\n\nconst API_URL = \"https://countrykid.herokuapp.com/api\"\nexport {API_URL}","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n\n//same as above and you can write is all on one line\nimport {Container} from \"@mui/material\"\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {Link} from 'react-router-dom'\nimport axios from 'axios';\nimport { API_URL } from '../config';\nimport { useNavigate } from 'react-router-dom';\n\nconst theme = createTheme();\n\n\nfunction SignUp(props) {\n    const navigate = useNavigate()\n\n    const handleSignUp = async (event) => {\n        event.preventDefault()\n        let newUser = {\n            username: event.target.username.value,\n            email: event.target.email.value,\n            password: event.target.password.value\n        }\n\n        await axios.post(`${API_URL}/signup`, newUser, {withCredentials: true})\n        navigate(\"/signin\")\n    \n    }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSignUp} noValidate sx={{ mt: 1 }}>\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link to=\"/signin\" >\n                  {\"Already have an account? Sign In instead\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default SignUp","import { createContext, useState } from \"react\";\n\n\nconst UserContext = createContext()\n\nfunction UserProverWrapper(props){\n    // all the components wrapped insode the userwrapper can use these variables\n\n    //create state here so you can use it anywhere in your app \n    const [user, setUser] = useState(null)\n    const [error, setError] = useState(null) \n\n    \n    // pass in the key \n    return (\n        <UserContext.Provider value={{user, setUser, error, setError}}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n\nexport {UserContext, UserProverWrapper}","import {Navbar, Nav} from  'react-bootstrap'\nimport {Link} from  'react-router-dom'\nimport {UserContext} from '../context/app.context'\nimport {useContext} from \"react\"\n\n\nfunction MyNav(props) {\n\n\tlet {onLogout} = props\n\tlet {user} = useContext(UserContext)\n\nreturn (\n\t<Navbar  bg=\"light\"  expand=\"lg\">\n\t\t<Navbar.Toggle  aria-controls=\"basic-navbar-nav\"  />\n\t\t<Navbar.Collapse  id=\"basic-navbar-nav\">\n\t\t\t<Nav  className=\"mr-auto\">\n                <Link  style={{marginLeft: '10px'}}  to=\"/\">Home</Link>\n\t\t\t\t{user ? (\n\t\t\t\t\t<button onClick={onLogout} >Logout</button>\n\t\t\t\t) :\n\t\t\t\t(\n\t\t\t\t<>\n\t\t\t\t\t<Link  style={{marginLeft: '10px'}}  to=\"/signin\">SignIn</Link>\n\t\t\t\t\t<Link  style={{marginLeft: '10px'}}  to=\"/signup\">SignUp</Link>\n\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t</Nav>\n\t\t</Navbar.Collapse>\n\t</Navbar>\n\t)\n}\nexport default MyNav","import React from 'react'\nimport { TextField, Button } from '@mui/material'\nimport MovingIcon from '@mui/icons-material/Moving';\n\n\nfunction Search(props) {\n\n    let {btnSearch} = props\n\n    return (\n\n        <div>\n        <img src=\"/globe.gif\" alt=\"globe\"></img>\n        <hr/>\n        <form onSubmit={btnSearch}>\n        <div>        <TextField\n            hiddenLabel\n            id=\"filled-hidden-label-normal\"\n            variant=\"filled\"\n            name=\"country\"\n            label=\"Country\"\n            \n            /></div>\n        <div>\n        <TextField\n            hiddenLabel\n            id=\"filled-hidden-label-normal\"\n            variant=\"filled\"\n            name=\"city\"\n            label=\"City\"\n            />\n        </div>\n\n            <div>\n            <Button variant=\"text\" type=\"submit\">Let's Go\n            <MovingIcon></MovingIcon>\n            </Button>\n            </div>\n            \n            </form>\n        </div>\n    )\n}\n\nexport default Search\n","import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport { useParams } from 'react-router'\nimport { API_URL } from '../config'\nimport Search from \"./Search\"\nimport {useNavigate } from 'react-router-dom'\nimport {Link} from  'react-router-dom'\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { Grid } from '@mui/material'\n\nfunction Country(props) {\n    const navigate = useNavigate()\n    const {country, city, lat, lon} = useParams()\n\n    // let {lat, lon} = useParams()\n    // console.log(\"LATT\", lat, lon)\n    // let {city, country} = props\n    const [countryData, setCountryData] = useState([])\n    const [cityData, setCityData] = useState(null)\n\n  useEffect(() => {\n\n      const getData = async () => {\n        let responseCountry = await axios.get(`https://restcountries.com/v3.1/name/${country}`)\n        setCountryData(responseCountry.data)\n\n        let responseWeather = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=cae15943359bb230669b0935772b0fd1`)\n        setCityData(responseWeather.data)\n\n      }\n      getData()\n\n  }, [country])\n\n    if (!countryData || !cityData) {\n        return <h1> Loading . . .</h1>\n      }\n\n    return (\n        <div className=\"countryInfo\">\n\n            <h1>Basic Data</h1>\n            {\n                countryData.map((elem) => {\n                    return (\n                        \n                        <div>\n                            <Card sx={{ maxWidth: 345 }}>\n                                <CardMedia\n                                    component=\"img\"\n                                    alt=\"flag\"\n                                    height=\"140\"\n                                    image={elem.flags.svg}\n                                />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                    {elem.name.common}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                    <b>Capital</b> {elem.capital}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                    <b>Area</b> {elem.area} km²\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                    <b>Population</b> {elem.population}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                    <b>Continent</b> {elem.continents}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                    <b>Currency</b> \n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <Link size=\"small\" to={elem.maps.googleMaps}>GoogleMaps</Link>\n                                    <Link size=\"small\" to={elem.maps.openStreetMaps}>OpenStreetMaps</Link>\n                                </CardActions>\n                            </Card>\n                        </div>\n\n                    )\n                })\n            }\n                        <div>\n                        <div></div>\n                        <hr/>\n                        <h1>Weather Of Today</h1>\n                        <Card sx={{ maxWidth: 345 }}>\n                                <CardMedia\n                                    component=\"img\"\n                                    alt=\"flag\"\n                                    height=\"140\"\n                                    image=\"\"\n                                />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                    {cityData.name}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                    <b>Temperature</b> {cityData.main.temp} °C\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                    <b>Feels like</b> {cityData.main.feels_like} °C\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                    <b>Humidity</b> {cityData.main.humidity}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                    <b>Description</b> f\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                    <b>Currency</b> \n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                </CardActions>\n                            </Card>\n        </div>\n\n        <hr/>\n        <h1>Start Learning</h1>\n                            <Card sx={{ maxWidth: 345 }}>\n\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                    <img src=\"/idea.png\" alt=\"idea\" height=\"40px\"></img>Create\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                    Create new words everyday to learn. \n                                    </Typography>\n                                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                    <img src=\"/book.png\" alt=\"idea\" height=\"40px\"></img>Learn\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                    Start learning and remembering the words. \n                                    </Typography>\n                                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                    <img src=\"/talking.png\" alt=\"idea\" height=\"40px\"></img>Apply\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                    Practise your learnings in real-life\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                </CardActions>\n                            </Card>\n\n        <div><Link to={`/${country}/${city}/${lat}/${lon}/list`}> Add words to list</Link></div>        \n        \n    \n        </div>\n    )\n}\n\nexport default Country\n","\nimport React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { API_URL } from '../config';\nimport { Navigate, useParams } from 'react-router';\nimport { useNavigate, Redirect } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n      },\n    },\n    button: {\n      margin: theme.spacing(1),\n    }\n  }))\n\n  \nfunction AddWord(props) {\n\n    const navigate = useNavigate()\n\n    let {country, city, lat, lon} = useParams()\n    const [inputField, setInputField] = useState([\n        {id: uuidv4(), word: \" \", translation: \" \"},\n    ])\n\n\n    const handleChangeInput = (id,event) => {\n        const newInputFields = inputField.map(i => {\n            if(id === i.id) {\n              i[event.target.name] = event.target.value\n            }\n            return i;\n          })\n          \n          setInputField(newInputFields);\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()    \n\n        // console.log(inputField)\n\n        try {\n            let response = await axios.post(`${API_URL}/${city}/wordlist`, inputField, {withCredentials: true})\n            console.log(response)\n            \n        }\n        catch (err){\n            console.log(\"failed\")\n            }\n\n    }\n\n    const handleAddFields = (event) => {\n        setInputField([...inputField, {word: '', translation: \"\"}])\n    }\n\n    const handleRemoveFields = id => {\n        const values  = [...inputField];\n        values.splice(values.findIndex(value => value.id === id), 1);\n        setInputField(values);\n    }\n \n    const classes = useStyles()\n\n    return (\n        <Container>\n            <h1>Add new word</h1>\n            <form className={classes.root} onSubmit={handleSubmit}>\n            {\n                inputField.map((inputField) => (\n                    <div key={inputField.id}>\n                    <TextField \n                    name=\"word\"\n                    label=\"Input Word\"\n                    variant=\"filled\"\n                    value={inputField.word}\n                    onChange={event => handleChangeInput(inputField.id, event)}\n                    />\n                    <TextField \n                    name=\"translation\"\n                    label=\"Input Translation\"\n                    variant=\"filled\"\n                    value={inputField.translation}\n                    onChange={event => handleChangeInput(inputField.id, event)}\n                    />\n                    <IconButton disabled={inputField.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\n                        <RemoveIcon />\n                    </IconButton>\n                    <IconButton\n                    onClick={handleAddFields}\n                    >\n                    \n                        <AddIcon />\n                    </IconButton>\n                    \n                    </div>\n                ))}\n                <Button\n                    className={classes.button}\n                    variant=\"contained\" \n                    color=\"primary\" \n                    type=\"submit\" \n                    endIcon={<Icon>send</Icon>}\n                    onClick={handleSubmit}\n                    >Send</Button>\n            </form>\n        </Container>\n    )\n}\n\nexport default AddWord\n","import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport { API_URL } from '../config'\nimport {MapContainer, TileLayer, Marker, Popup} from  'react-leaflet'\nimport L from  'leaflet';\nimport { Link } from 'react-router-dom';\n\nimport  'leaflet/dist/leaflet.css'\nconst pinLogo = new L.Icon({\n\ticonUrl: '/pin.png',\n\ticonSize: [40, 40],\n});\n\n\nfunction Profile() {\n\n    const [data, setData] = useState([])\n    useEffect(() => {\n        const getData = async () => {\n           // Fetching info for a single todo  \n           let response = await axios.get(`${API_URL}/profile`, {withCredentials: true})\n           setData(response.data)\n\n        }\n        getData()\n    }, [])\n\n\n    const position = [51.505, -0.09]\n    function calculatePosition(lat, lon){\n        let position = [lat, lon]\n        return position \n    }\n\n\n    return (\n        <div>\n\n            <h1>Places vistited</h1>\n<MapContainer  \n\t\t\tstyle={{width: '500px', height: '330px'}} \n            zoom={1}  \n            center={position}\n\t\t\tscrollWheelZoom={false}>\n\t\t\t<TileLayer\n\t\t\t\tattribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t/>\n                    {\n                    data.map((elem)=> {\n                        return (\n                            <Marker icon={pinLogo} position={calculatePosition(elem.lat, elem.lon)}>\n\t\t\t\t            <Popup>\n                            Click on me <br/>\n\t\t\t\t\t<Link to={`/${elem.country}/${elem.city}/${elem.lat}/${elem.lon}/details`}>{elem.city}</Link>\n\t\t\t\t</Popup>\n\t\t\t</Marker>\n                        )\n                    })\n                }\n\n\t\t</MapContainer>\n        </div>\n    )\n}\n\nexport default Profile\n","import React from 'react'\nimport {useParams} from \"react-router-dom\"\nimport {useEffect, useContext, useState} from \"react\";\nimport axios from 'axios';\nimport { API_URL } from '../config';\n\nimport Box from '@mui/material/Box';\nimport { LocalDining } from '@material-ui/icons';\n\n\nfunction Details() {\n\n    const [data, setData] = useState([])\n    const [words, setwords] = useState(null)\n    const [wordCard, setwordCard] = useState(false)\n\n    let {country, city, lat, lon} = useParams()\n    console.log(country)\n    useEffect(() => {\n        const getData = async () => {\n           // Fetching info for a single todo  \n           let response = await axios.get(`${API_URL}/${country}/${city}/${lat}/${lon}/details`, {withCredentials: true})\n           console.log(response.data)\n           setData(response.data)\n           setwords(response.data.words)\n\n        }\n        getData()\n    }, [words])\n\n\n\n    function handleClick(){\n        setwordCard(!wordCard)\n    }\n\n    if (!words){\n     return <p>loading...</p>\n    }    // create ternary state --> if true show word if false show translation \n\n    return (\n        <div>\n\n        {\n            words.map((elem)=> {\n                return (\n                    <Box onClick={handleClick}\n                    sx={{\n                        width: 200,\n                        height: 50,\n                        backgroundColor: 'primary.dark',\n                        fontSize: 34, \n                        fontWeight: 'medium',\n                        textAlign: \"center\",\n                        margin:\"20px\",\n                        '&:hover': {\n                        backgroundColor: 'primary.main',\n                        opacity: [0.9, 0.8, 0.7],\n\n                    },\n                        }}\n                >{wordCard ? elem.word : elem.translation}</Box>\n                )\n            })\n        }\n\n        </div>\n    )\n}\n\nexport default Details\n","import React, {useEffect, useContext, useState} from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport SignIn from \"./components/Signin\";\nimport SignUp from \"./components/Signup\";\nimport MyNav from \"./components/MyNav\";\nimport { API_URL } from \"./config\";\nimport { UserContext } from \"./context/app.context\";\nimport {useNavigate } from 'react-router-dom'\nimport axios from \"axios\";\nimport Search from \"./components/Search\";\nimport Country from \"./components/Country\";\nimport AddWord from \"./components/AddWord\";\nimport Profile from \"./components/Profile\";\nimport Details from \"./components/Details\"\n\nfunction App() {\n\n  useContext(UserContext)\n  const {user, setUser, error, setError} = useContext(UserContext)\n\n  const [country, setCountry] = useState(null)\n  const [city, setCity] = useState(null)\n  const [lat, setLat] = useState(\"\")\n  const [lon, setLon] = useState(\"\")\n \n  // setting it to true so that we can show a loading screen and make the user wait until this api finsihes\n  const [fetchingUser, setFetchingUser] = useState(true)\n\n  // This hook is for us to redirect users to different urls\n  const navigate = useNavigate()\n\n  useEffect(() => {\n\n    const getData = async () => {\n\n        try {\n          let userReponse = await axios.get(`${API_URL}/user`, {withCredentials: true})\n          setFetchingUser(false)\n          setUser(userReponse.data)\n        \n        }\n        catch(err){\n          setFetchingUser(false)\n        }\n    }\n\n    getData()\n\n  }, [])\n\n  // useEffect(() => {\n  //   navigate('/')\n  // }, [user])\n\n\n\nconst handleSigIn = async (event) =>{ \n  event.preventDefault()\n  try {\n    let user = {\n      email: event.target.email.value,\n      password: event.target.password.value\n    }\n\n    // axios by default ignores all the credential request and we have to add a 3rd parameter to let axios know not to ignore \n    // sends the cookies \n    // for the get request it is the second paramter \n    // just set it to true for all the axios requests\n    let repsonse = await axios.post(`${API_URL}/signin`, user, {withCredentials: true})\n    setUser(repsonse.data)\n    navigate(\"/\")\n  }\n  catch(err){\n    setError(err.response.data.error)\n  }\n\n}\n\n\nconst handleLogout = async () => {\n  // dont need to send any data but need the post request send an empty object \n  await axios.post(`${API_URL}/logout`, {}, {withCredentials:true})\n  setUser(null)\n}\n\nconst handleSearch = async (event) => {\n  event.preventDefault()\n \n  let country = event.target.country.value\n  let city = event.target.city.value\n\n  let response = await axios.get(`https://nominatim.openstreetmap.org/search/${city}?format=json&addressdetails=1&limit=1&polygon_svg=1`)\n  console.log(\"response\", response.data)\n  let data = response.data[0]\n\n  let destination = {\n    country: event.target.country.value,\n    city: event.target.city.value,\n    lat: data.lat,\n    lon: data.lon,\n  }\n  console.log(data.lat)\n  console.log(data.lon)\n\n  try {\n    let try1 = await axios.post(`${API_URL}/country`, destination, {withCredentials: true})\n    console.log(try1)\n  }\n  catch (err){\n    console.log(\"failed\")\n    }\n  \n\n\n  navigate(`${country}/${city}/${data.lat}/${data.lon}`)\n  // console.log(\"WORKED\", lat, lon)\n\n}\n\nconst handleSubmit = async (event) => {\n  event.preventDefault()\n  //https://www.youtube.com/watch?v=zgKH12s_95A\n  console.log(event.currentTarget)\n}\n\n  if (fetchingUser) {\n    return <p>loading. . . . </p>\n  }\n\n  return (\n    <div>\n    \n      <MyNav onLogout={handleLogout} user={user}/>\n      <p>welkom </p>\n      <Routes>\n          <Route path=\"/\" element={<Search btnSearch={handleSearch} user={user}/> } />\n          <Route  path=\"/signin\" element={<SignIn btnSignIn={handleSigIn} myError={error}/>}/>\n          <Route  path=\"/signup\" element={<SignUp />}/>\n          <Route path=\"/:country/:city/:lat/:lon\" element={<Country city={city} country={country}/>} />\n          <Route path=\"/:country/:city/:lat/:lon/list\" element={<AddWord btnSubmit={handleSubmit} />}/>\n          <Route path=\"/profile\" element={<Profile />}/>\n          <Route path=\"/:country/:city/:lat/:lon/details\" element={<Details />}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport  'bootstrap/dist/css/bootstrap.min.css';\nimport {UserProverWrapper} from \"./context/app.context\"\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <UserProverWrapper>\n      <App />\n      </UserProverWrapper>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}